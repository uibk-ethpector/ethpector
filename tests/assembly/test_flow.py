from ethpector.assembly.flow import ReachingDefState, Stack
from ethpector.assembly.program import Program

__author__ = "soad003"
__copyright__ = "soad003"
__license__ = "MIT"

# examples/basic owner
CODE = """
608060405234801561001057600080fd5b50600436106100365760003560e01c8063893d20e81461
003b578063a6f9dae114610059575b600080fd5b610043610075565b60405161005091906103c456
5b60405180910390f35b610073600480360381019061006e91906102fa565b61009e565b005b6000
8060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60
008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffff
ffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101
2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152
600401610123906103df565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffff
ffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffff
ffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758
e3ac2f1de95f02eb95f0a73560405160405180910390a3806000806101000a81548173ffffffffff
ffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffff
ff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660006113889060405160
2401610212906103ff565b6040516020818303038152906040527ff31a6969000000000000000000
000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffff
ffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffff
ffffffffff838183161783525050505060405161029c91906103ad565b6000604051808303818588
88f193505050503d80600081146102da576040519150601f19603f3d011682016040523d82523d60
00602084013e6102df565b606091505b50505050565b6000813590506102f481610502565b929150
50565b6000602082840312156103105761030f6104ab565b5b600061031e848285016102e5565b91
505092915050565b61033081610446565b82525050565b60006103418261041f565b61034b818561
042a565b935061035b818560208601610478565b80840191505092915050565b6000610374601383
610435565b915061037f826104b0565b602082019050919050565b6000610397600883610435565b
91506103a2826104d9565b602082019050919050565b60006103b98284610336565b915081905092
915050565b60006020820190506103d96000830184610327565b92915050565b6000602082019050
81810360008301526103f881610367565b9050919050565b60006020820190508181036000830152
6104188161038a565b9050919050565b600081519050919050565b600081905092915050565b6000
82825260208201905092915050565b600061045182610458565b9050919050565b600073ffffffff
ffffffffffffffffffffffffffffffff82169050919050565b60005b838110156104965780820151
8184015260208101905061047b565b838111156104a5576000848401525b50505050565b600080fd
5b7f43616c6c6572206973206e6f74206f776e657200000000000000000000000000600082015250
565b7f63616c6c20666f6f0000000000000000000000000000000000000000000000006000820152
50565b61050b81610446565b811461051657600080fd5b5056fea26469706673582212207df9af01
29728f9e2d511fad0f47031dc6148dad401e98996be0559665c7210764736f6c63430008070033
"""


def test_flow_rechingdef():
    p = Program(CODE)
    bb = p.get_basic_blocks()
    inital_state = ReachingDefState(p, bb[0])
    inital_state.execute()


def test_flow_stack():
    p = Stack()
    p.push(1)
    p.push(2)
    p.dup(1)
    p.dup(3)
    p.push(3)
    p.swap(1)
    p.swap(3)
    assert p.pop() == 2
    assert p.pop() == 3
    assert p.pop() == 2
    assert p.pop() == 1
    assert p.pop() == 1

    p.push(1)
    p.push(2)
    p.push(3)
    assert p.peekn(3) == [3, 2, 1]

    assert p.popn(3) == [3, 2, 1]

    assert p.len() == 0

    p.push(1)
    p.dup(1)
    assert p.list() == [1, 1]

    p.clear()
    p.push(22)
    p.push(1)
    p.swap(1)
    assert p.list() == [1, 22]
